//
//  Strctures.h
//  GLKit_TD3D
//
//  Created by Michael Daley on 14/09/2011.
//  Copyright (c) 2011 71Squared. All rights reserved.
//

#ifndef GLKit_TD3D_Strctures_h
#define GLKit_TD3D_Strctures_h

typedef struct {
    GLKVector3      vertex;
    GLKVector3      normal;
    GLKVector2      texCoord;
} SSTexturedVertexData3D;

#pragma mark - Inline Functions

// Construct a rotation matrix that will match the direction vector passed in
static inline void SSMatrixFaceVector(float *mtx, const GLKVector3 direction, const GLKVector3 up)
{
    GLKVector3 nDirection = GLKVector3Normalize(direction);
    GLKVector3 right = GLKVector3Normalize(GLKVector3CrossProduct(up, nDirection));
    GLKVector3 newUp = GLKVector3Normalize(GLKVector3CrossProduct(nDirection, right));
    GLKVector3 backwards = GLKVector3Normalize(GLKVector3CrossProduct(right, newUp));
    
    // Construct a matrix from the new values
    mtx[0] =  right.x;        mtx[1] =  right.y;        mtx[2] =  right.z;        mtx[3] =  0;
    mtx[4] =  newUp.x;        mtx[5] =  newUp.y;        mtx[6] =  newUp.z;        mtx[7] =  0;
    mtx[8] =  backwards.x;    mtx[9] =  backwards.y;    mtx[10] = backwards.z;    mtx[11] = 0;
    mtx[12] = 0;              mtx[13] = 0;              mtx[14] = 0;              mtx[15] = 1;

}

#endif
